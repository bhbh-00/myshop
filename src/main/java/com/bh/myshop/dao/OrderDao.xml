<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bh.myshop.dao.OrderDao">

	<!-- 주문내역 갯수 확인 -->
	<select id="getOrderTotleCount" resultType="int">
		SELECT count(*)
		FROM `order`
		WHERE 1
		AND delStatus = 0
		<if test="searchKeywordType == 'regDate'">
			AND regDate LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'productId'">
			AND productId LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'regDateAndproductId'">
			AND (regDate LIKE CONCAT('%', #{searchKeyword}, '%') OR
			productId LIKE CONCAT('%', #{searchKeyword}, '%')))
		</if>
		ORDER BY id DESC
	</select>

	<!-- 주문내역 리스트 -->
	<select id="getForPrintOrders" resultType="Order">
		SELECT *
		FROM `order`
		WHERE 1
		AND delStatus = 0
		<if test="searchKeywordType == 'regDate'">
			AND regDate LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'productId'">
			AND productId LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		<if test="searchKeywordType == 'regDateAndproductId'">
			AND (regDate LIKE CONCAT('%', #{searchKeyword}, '%') OR
			productId LIKE CONCAT('%', #{searchKeyword}, '%')))
		</if>
		ORDER BY id DESC
		<if test="limitStart != null and limitTake != null">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>

	<select id="getForPrintOrdersByMyList" resultType="Order">
		SELECT O.*,
		IFNULL(M.name, "탈퇴회원") AS extra__writer
		FROM `order` AS O
		LEFT JOIN `member` AS M
		ON O.memberId = M.id
		WHERE O.memberId = #{id}
		AND O.delStatus = 0
		ORDER BY O.id DESC
		<if test="limitStart != null and limitTake != null">
			LIMIT #{limitStart}, #{limitTake}
		</if>
	</select>

	<select id="getOrdersTotleCountByMyList" resultType="int">
		SELECT
		count(*)
		FROM `order`
		WHERE memberId = #{id}
		AND delStatus = 0
		ORDER BY id
		DESC;
	</select>

	<select id="getForPrintOrdersByMemberId" resultType="Order">
		SELECT O.*,
		IFNULL(M.name, "탈퇴회원") AS extra__writer
		FROM `order` AS O
		LEFT JOIN
		`member` AS M
		ON O.memberId = M.id
		WHERE O.memberId = #{id}
		AND
		O.delStatus = 0;
	</select>

	<!-- 주문하기 -->
	<insert id="add" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		`order`
		SET regDate = NOW(),
		updateDate = NOW(),
		productId =
		#{productId},
		categoryId = #{categoryId},
		memberId = #{memberId},
		orderName = #{orderName},
		cellphoneNo = #{cellphoneNo},
		post = #{post},
		address = #{address},
		detailAddress = #{detailAddress},
		email =
		#{email},
		payment = #{payment},
		totalPayment =
		#{totalPayment};
	</insert>

	<!-- 주문내역 불러오기 -->
	<select id="getForPrintOrderHistory" resultType="Order">
		SELECT *
		FROM
		`order`
		WHERE id = #{id}
		AND delStatus = 0;
	</select>

	<!-- 상품 불러오기 -->
	<select id="getForPrintOrderProduct" resultType="Product">
		SELECT P.*
		FROM
		product AS P
		LEFT JOIN `order` AS O
		ON P.id = O.productId
		WHERE O.id =
		#{id}
		AND P.delStatus = 0;
	</select>

	<!-- 배송내역 불러오기 -->
	<select id="getForPrintOrderDelivery" resultType="Delivery">
		SELECT D.*
		FROM
		`order` AS O
		LEFT JOIN delivery AS D
		ON O.id = D.orderId
		WHERE D.id =
		#{id}
		AND D.delStatus = 0;
	</select>


	<!-- 상품 보기 -->
	<select id="getForPrintProduct" resultType="Product">
		SELECT *
		FROM
		product
		WHERE
		id = #{productId}
		AND delStatus = 0;
	</select>

</mapper>